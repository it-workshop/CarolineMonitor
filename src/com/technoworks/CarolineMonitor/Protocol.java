// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

package com.technoworks.CarolineMonitor;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ImagesOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .Image left = 1;
    /**
     * <code>required .Image left = 1;</code>
     */
    boolean hasLeft();
    /**
     * <code>required .Image left = 1;</code>
     */
    com.technoworks.CarolineMonitor.Protocol.Image getLeft();

    // required .Image right = 2;
    /**
     * <code>required .Image right = 2;</code>
     */
    boolean hasRight();
    /**
     * <code>required .Image right = 2;</code>
     */
    com.technoworks.CarolineMonitor.Protocol.Image getRight();
  }
  /**
   * Protobuf type {@code Images}
   */
  public static final class Images extends
      com.google.protobuf.GeneratedMessageLite
      implements ImagesOrBuilder {
    // Use Images.newBuilder() to construct.
    private Images(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Images(boolean noInit) {}

    private static final Images defaultInstance;
    public static Images getDefaultInstance() {
      return defaultInstance;
    }

    public Images getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Images(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.technoworks.CarolineMonitor.Protocol.Image.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = left_.toBuilder();
              }
              left_ = input.readMessage(com.technoworks.CarolineMonitor.Protocol.Image.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(left_);
                left_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.technoworks.CarolineMonitor.Protocol.Image.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = right_.toBuilder();
              }
              right_ = input.readMessage(com.technoworks.CarolineMonitor.Protocol.Image.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(right_);
                right_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Images> PARSER =
        new com.google.protobuf.AbstractParser<Images>() {
      public Images parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Images(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Images> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .Image left = 1;
    public static final int LEFT_FIELD_NUMBER = 1;
    private com.technoworks.CarolineMonitor.Protocol.Image left_;
    /**
     * <code>required .Image left = 1;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Image left = 1;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Image getLeft() {
      return left_;
    }

    // required .Image right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private com.technoworks.CarolineMonitor.Protocol.Image right_;
    /**
     * <code>required .Image right = 2;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Image right = 2;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Image getRight() {
      return right_;
    }

    private void initFields() {
      left_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
      right_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLeft().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRight().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, right_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, right_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Images parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Images prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Images}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Images, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.ImagesOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Images.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        left_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        right_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Images getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Images.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Images build() {
        com.technoworks.CarolineMonitor.Protocol.Images result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Images buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Images result = new com.technoworks.CarolineMonitor.Protocol.Images(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.right_ = right_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Images other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Images.getDefaultInstance()) return this;
        if (other.hasLeft()) {
          mergeLeft(other.getLeft());
        }
        if (other.hasRight()) {
          mergeRight(other.getRight());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!getLeft().isInitialized()) {
          
          return false;
        }
        if (!getRight().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Images parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Images) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .Image left = 1;
      private com.technoworks.CarolineMonitor.Protocol.Image left_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
      /**
       * <code>required .Image left = 1;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Image left = 1;</code>
       */
      public com.technoworks.CarolineMonitor.Protocol.Image getLeft() {
        return left_;
      }
      /**
       * <code>required .Image left = 1;</code>
       */
      public Builder setLeft(com.technoworks.CarolineMonitor.Protocol.Image value) {
        if (value == null) {
          throw new NullPointerException();
        }
        left_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Image left = 1;</code>
       */
      public Builder setLeft(
          com.technoworks.CarolineMonitor.Protocol.Image.Builder builderForValue) {
        left_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Image left = 1;</code>
       */
      public Builder mergeLeft(com.technoworks.CarolineMonitor.Protocol.Image value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            left_ != com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance()) {
          left_ =
            com.technoworks.CarolineMonitor.Protocol.Image.newBuilder(left_).mergeFrom(value).buildPartial();
        } else {
          left_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Image left = 1;</code>
       */
      public Builder clearLeft() {
        left_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // required .Image right = 2;
      private com.technoworks.CarolineMonitor.Protocol.Image right_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
      /**
       * <code>required .Image right = 2;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Image right = 2;</code>
       */
      public com.technoworks.CarolineMonitor.Protocol.Image getRight() {
        return right_;
      }
      /**
       * <code>required .Image right = 2;</code>
       */
      public Builder setRight(com.technoworks.CarolineMonitor.Protocol.Image value) {
        if (value == null) {
          throw new NullPointerException();
        }
        right_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Image right = 2;</code>
       */
      public Builder setRight(
          com.technoworks.CarolineMonitor.Protocol.Image.Builder builderForValue) {
        right_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Image right = 2;</code>
       */
      public Builder mergeRight(com.technoworks.CarolineMonitor.Protocol.Image value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            right_ != com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance()) {
          right_ =
            com.technoworks.CarolineMonitor.Protocol.Image.newBuilder(right_).mergeFrom(value).buildPartial();
        } else {
          right_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Image right = 2;</code>
       */
      public Builder clearRight() {
        right_ = com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Images)
    }

    static {
      defaultInstance = new Images(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Images)
  }

  public interface OpticalFlowOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .Point2 left = 1;
    /**
     * <code>required .Point2 left = 1;</code>
     */
    boolean hasLeft();
    /**
     * <code>required .Point2 left = 1;</code>
     */
    com.technoworks.CarolineMonitor.Protocol.Point2 getLeft();

    // required .Point2 right = 2;
    /**
     * <code>required .Point2 right = 2;</code>
     */
    boolean hasRight();
    /**
     * <code>required .Point2 right = 2;</code>
     */
    com.technoworks.CarolineMonitor.Protocol.Point2 getRight();
  }
  /**
   * Protobuf type {@code OpticalFlow}
   */
  public static final class OpticalFlow extends
      com.google.protobuf.GeneratedMessageLite
      implements OpticalFlowOrBuilder {
    // Use OpticalFlow.newBuilder() to construct.
    private OpticalFlow(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private OpticalFlow(boolean noInit) {}

    private static final OpticalFlow defaultInstance;
    public static OpticalFlow getDefaultInstance() {
      return defaultInstance;
    }

    public OpticalFlow getDefaultInstanceForType() {
      return defaultInstance;
    }

    private OpticalFlow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.technoworks.CarolineMonitor.Protocol.Point2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = left_.toBuilder();
              }
              left_ = input.readMessage(com.technoworks.CarolineMonitor.Protocol.Point2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(left_);
                left_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.technoworks.CarolineMonitor.Protocol.Point2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = right_.toBuilder();
              }
              right_ = input.readMessage(com.technoworks.CarolineMonitor.Protocol.Point2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(right_);
                right_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<OpticalFlow> PARSER =
        new com.google.protobuf.AbstractParser<OpticalFlow>() {
      public OpticalFlow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpticalFlow(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpticalFlow> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .Point2 left = 1;
    public static final int LEFT_FIELD_NUMBER = 1;
    private com.technoworks.CarolineMonitor.Protocol.Point2 left_;
    /**
     * <code>required .Point2 left = 1;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Point2 left = 1;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Point2 getLeft() {
      return left_;
    }

    // required .Point2 right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private com.technoworks.CarolineMonitor.Protocol.Point2 right_;
    /**
     * <code>required .Point2 right = 2;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Point2 right = 2;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Point2 getRight() {
      return right_;
    }

    private void initFields() {
      left_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
      right_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLeft().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRight().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, right_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, right_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.OpticalFlow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.OpticalFlow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OpticalFlow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.OpticalFlow, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.OpticalFlowOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.OpticalFlow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        left_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        right_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.OpticalFlow getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.OpticalFlow.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.OpticalFlow build() {
        com.technoworks.CarolineMonitor.Protocol.OpticalFlow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.OpticalFlow buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.OpticalFlow result = new com.technoworks.CarolineMonitor.Protocol.OpticalFlow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.right_ = right_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.OpticalFlow other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.OpticalFlow.getDefaultInstance()) return this;
        if (other.hasLeft()) {
          mergeLeft(other.getLeft());
        }
        if (other.hasRight()) {
          mergeRight(other.getRight());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!getLeft().isInitialized()) {
          
          return false;
        }
        if (!getRight().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.OpticalFlow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.OpticalFlow) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .Point2 left = 1;
      private com.technoworks.CarolineMonitor.Protocol.Point2 left_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
      /**
       * <code>required .Point2 left = 1;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Point2 left = 1;</code>
       */
      public com.technoworks.CarolineMonitor.Protocol.Point2 getLeft() {
        return left_;
      }
      /**
       * <code>required .Point2 left = 1;</code>
       */
      public Builder setLeft(com.technoworks.CarolineMonitor.Protocol.Point2 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        left_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Point2 left = 1;</code>
       */
      public Builder setLeft(
          com.technoworks.CarolineMonitor.Protocol.Point2.Builder builderForValue) {
        left_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Point2 left = 1;</code>
       */
      public Builder mergeLeft(com.technoworks.CarolineMonitor.Protocol.Point2 value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            left_ != com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance()) {
          left_ =
            com.technoworks.CarolineMonitor.Protocol.Point2.newBuilder(left_).mergeFrom(value).buildPartial();
        } else {
          left_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Point2 left = 1;</code>
       */
      public Builder clearLeft() {
        left_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // required .Point2 right = 2;
      private com.technoworks.CarolineMonitor.Protocol.Point2 right_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
      /**
       * <code>required .Point2 right = 2;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Point2 right = 2;</code>
       */
      public com.technoworks.CarolineMonitor.Protocol.Point2 getRight() {
        return right_;
      }
      /**
       * <code>required .Point2 right = 2;</code>
       */
      public Builder setRight(com.technoworks.CarolineMonitor.Protocol.Point2 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        right_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Point2 right = 2;</code>
       */
      public Builder setRight(
          com.technoworks.CarolineMonitor.Protocol.Point2.Builder builderForValue) {
        right_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Point2 right = 2;</code>
       */
      public Builder mergeRight(com.technoworks.CarolineMonitor.Protocol.Point2 value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            right_ != com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance()) {
          right_ =
            com.technoworks.CarolineMonitor.Protocol.Point2.newBuilder(right_).mergeFrom(value).buildPartial();
        } else {
          right_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Point2 right = 2;</code>
       */
      public Builder clearRight() {
        right_ = com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OpticalFlow)
    }

    static {
      defaultInstance = new OpticalFlow(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OpticalFlow)
  }

  public interface DepthMapOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 width = 1;
    /**
     * <code>required int32 width = 1;</code>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 1;</code>
     */
    int getWidth();

    // required int32 height = 2;
    /**
     * <code>required int32 height = 2;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 2;</code>
     */
    int getHeight();

    // repeated double data = 3;
    /**
     * <code>repeated double data = 3;</code>
     */
    java.util.List<java.lang.Double> getDataList();
    /**
     * <code>repeated double data = 3;</code>
     */
    int getDataCount();
    /**
     * <code>repeated double data = 3;</code>
     */
    double getData(int index);
  }
  /**
   * Protobuf type {@code DepthMap}
   */
  public static final class DepthMap extends
      com.google.protobuf.GeneratedMessageLite
      implements DepthMapOrBuilder {
    // Use DepthMap.newBuilder() to construct.
    private DepthMap(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private DepthMap(boolean noInit) {}

    private static final DepthMap defaultInstance;
    public static DepthMap getDefaultInstance() {
      return defaultInstance;
    }

    public DepthMap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private DepthMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              width_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              height_ = input.readInt32();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                data_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              data_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                data_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DepthMap> PARSER =
        new com.google.protobuf.AbstractParser<DepthMap>() {
      public DepthMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DepthMap(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DepthMap> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 width = 1;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <code>required int32 width = 1;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 width = 1;</code>
     */
    public int getWidth() {
      return width_;
    }

    // required int32 height = 2;
    public static final int HEIGHT_FIELD_NUMBER = 2;
    private int height_;
    /**
     * <code>required int32 height = 2;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 height = 2;</code>
     */
    public int getHeight() {
      return height_;
    }

    // repeated double data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> data_;
    /**
     * <code>repeated double data = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated double data = 3;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated double data = 3;</code>
     */
    public double getData(int index) {
      return data_.get(index);
    }

    private void initFields() {
      width_ = 0;
      height_ = 0;
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, height_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeDouble(3, data_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, height_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.DepthMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.DepthMap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code DepthMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.DepthMap, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.DepthMapOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.DepthMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.DepthMap getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.DepthMap.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.DepthMap build() {
        com.technoworks.CarolineMonitor.Protocol.DepthMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.DepthMap buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.DepthMap result = new com.technoworks.CarolineMonitor.Protocol.DepthMap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.DepthMap other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.DepthMap.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.DepthMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.DepthMap) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 width = 1;
      private int width_ ;
      /**
       * <code>required int32 width = 1;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        
        return this;
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        
        return this;
      }

      // required int32 height = 2;
      private int height_ ;
      /**
       * <code>required int32 height = 2;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        
        return this;
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        
        return this;
      }

      // repeated double data = 3;
      private java.util.List<java.lang.Double> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = new java.util.ArrayList<java.lang.Double>(data_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public double getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public Builder setData(
          int index, double value) {
        ensureDataIsMutable();
        data_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public Builder addData(double value) {
        ensureDataIsMutable();
        data_.add(value);
        
        return this;
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataIsMutable();
        super.addAll(values, data_);
        
        return this;
      }
      /**
       * <code>repeated double data = 3;</code>
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DepthMap)
    }

    static {
      defaultInstance = new DepthMap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DepthMap)
  }

  public interface ModelOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .Point3 verticies = 1;
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    java.util.List<com.technoworks.CarolineMonitor.Protocol.Point3> 
        getVerticiesList();
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    com.technoworks.CarolineMonitor.Protocol.Point3 getVerticies(int index);
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    int getVerticiesCount();

    // repeated .Edge edges = 2;
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    java.util.List<com.technoworks.CarolineMonitor.Protocol.Edge> 
        getEdgesList();
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    com.technoworks.CarolineMonitor.Protocol.Edge getEdges(int index);
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    int getEdgesCount();
  }
  /**
   * Protobuf type {@code Model}
   */
  public static final class Model extends
      com.google.protobuf.GeneratedMessageLite
      implements ModelOrBuilder {
    // Use Model.newBuilder() to construct.
    private Model(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Model(boolean noInit) {}

    private static final Model defaultInstance;
    public static Model getDefaultInstance() {
      return defaultInstance;
    }

    public Model getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Model(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                verticies_ = new java.util.ArrayList<com.technoworks.CarolineMonitor.Protocol.Point3>();
                mutable_bitField0_ |= 0x00000001;
              }
              verticies_.add(input.readMessage(com.technoworks.CarolineMonitor.Protocol.Point3.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                edges_ = new java.util.ArrayList<com.technoworks.CarolineMonitor.Protocol.Edge>();
                mutable_bitField0_ |= 0x00000002;
              }
              edges_.add(input.readMessage(com.technoworks.CarolineMonitor.Protocol.Edge.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          verticies_ = java.util.Collections.unmodifiableList(verticies_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          edges_ = java.util.Collections.unmodifiableList(edges_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Model> PARSER =
        new com.google.protobuf.AbstractParser<Model>() {
      public Model parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Model(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Model> getParserForType() {
      return PARSER;
    }

    // repeated .Point3 verticies = 1;
    public static final int VERTICIES_FIELD_NUMBER = 1;
    private java.util.List<com.technoworks.CarolineMonitor.Protocol.Point3> verticies_;
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    public java.util.List<com.technoworks.CarolineMonitor.Protocol.Point3> getVerticiesList() {
      return verticies_;
    }
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    public java.util.List<? extends com.technoworks.CarolineMonitor.Protocol.Point3OrBuilder> 
        getVerticiesOrBuilderList() {
      return verticies_;
    }
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    public int getVerticiesCount() {
      return verticies_.size();
    }
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Point3 getVerticies(int index) {
      return verticies_.get(index);
    }
    /**
     * <code>repeated .Point3 verticies = 1;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Point3OrBuilder getVerticiesOrBuilder(
        int index) {
      return verticies_.get(index);
    }

    // repeated .Edge edges = 2;
    public static final int EDGES_FIELD_NUMBER = 2;
    private java.util.List<com.technoworks.CarolineMonitor.Protocol.Edge> edges_;
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    public java.util.List<com.technoworks.CarolineMonitor.Protocol.Edge> getEdgesList() {
      return edges_;
    }
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    public java.util.List<? extends com.technoworks.CarolineMonitor.Protocol.EdgeOrBuilder> 
        getEdgesOrBuilderList() {
      return edges_;
    }
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    public int getEdgesCount() {
      return edges_.size();
    }
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.Edge getEdges(int index) {
      return edges_.get(index);
    }
    /**
     * <code>repeated .Edge edges = 2;</code>
     */
    public com.technoworks.CarolineMonitor.Protocol.EdgeOrBuilder getEdgesOrBuilder(
        int index) {
      return edges_.get(index);
    }

    private void initFields() {
      verticies_ = java.util.Collections.emptyList();
      edges_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getVerticiesCount(); i++) {
        if (!getVerticies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEdgesCount(); i++) {
        if (!getEdges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < verticies_.size(); i++) {
        output.writeMessage(1, verticies_.get(i));
      }
      for (int i = 0; i < edges_.size(); i++) {
        output.writeMessage(2, edges_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < verticies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, verticies_.get(i));
      }
      for (int i = 0; i < edges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, edges_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Model parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Model prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Model}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Model, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.ModelOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Model.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        verticies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        edges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Model getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Model.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Model build() {
        com.technoworks.CarolineMonitor.Protocol.Model result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Model buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Model result = new com.technoworks.CarolineMonitor.Protocol.Model(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          verticies_ = java.util.Collections.unmodifiableList(verticies_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.verticies_ = verticies_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          edges_ = java.util.Collections.unmodifiableList(edges_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.edges_ = edges_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Model other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Model.getDefaultInstance()) return this;
        if (!other.verticies_.isEmpty()) {
          if (verticies_.isEmpty()) {
            verticies_ = other.verticies_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureVerticiesIsMutable();
            verticies_.addAll(other.verticies_);
          }
          
        }
        if (!other.edges_.isEmpty()) {
          if (edges_.isEmpty()) {
            edges_ = other.edges_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEdgesIsMutable();
            edges_.addAll(other.edges_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getVerticiesCount(); i++) {
          if (!getVerticies(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEdgesCount(); i++) {
          if (!getEdges(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Model parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Model) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Point3 verticies = 1;
      private java.util.List<com.technoworks.CarolineMonitor.Protocol.Point3> verticies_ =
        java.util.Collections.emptyList();
      private void ensureVerticiesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          verticies_ = new java.util.ArrayList<com.technoworks.CarolineMonitor.Protocol.Point3>(verticies_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public java.util.List<com.technoworks.CarolineMonitor.Protocol.Point3> getVerticiesList() {
        return java.util.Collections.unmodifiableList(verticies_);
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public int getVerticiesCount() {
        return verticies_.size();
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public com.technoworks.CarolineMonitor.Protocol.Point3 getVerticies(int index) {
        return verticies_.get(index);
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder setVerticies(
          int index, com.technoworks.CarolineMonitor.Protocol.Point3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVerticiesIsMutable();
        verticies_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder setVerticies(
          int index, com.technoworks.CarolineMonitor.Protocol.Point3.Builder builderForValue) {
        ensureVerticiesIsMutable();
        verticies_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder addVerticies(com.technoworks.CarolineMonitor.Protocol.Point3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVerticiesIsMutable();
        verticies_.add(value);

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder addVerticies(
          int index, com.technoworks.CarolineMonitor.Protocol.Point3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVerticiesIsMutable();
        verticies_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder addVerticies(
          com.technoworks.CarolineMonitor.Protocol.Point3.Builder builderForValue) {
        ensureVerticiesIsMutable();
        verticies_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder addVerticies(
          int index, com.technoworks.CarolineMonitor.Protocol.Point3.Builder builderForValue) {
        ensureVerticiesIsMutable();
        verticies_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder addAllVerticies(
          java.lang.Iterable<? extends com.technoworks.CarolineMonitor.Protocol.Point3> values) {
        ensureVerticiesIsMutable();
        super.addAll(values, verticies_);

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder clearVerticies() {
        verticies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .Point3 verticies = 1;</code>
       */
      public Builder removeVerticies(int index) {
        ensureVerticiesIsMutable();
        verticies_.remove(index);

        return this;
      }

      // repeated .Edge edges = 2;
      private java.util.List<com.technoworks.CarolineMonitor.Protocol.Edge> edges_ =
        java.util.Collections.emptyList();
      private void ensureEdgesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          edges_ = new java.util.ArrayList<com.technoworks.CarolineMonitor.Protocol.Edge>(edges_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public java.util.List<com.technoworks.CarolineMonitor.Protocol.Edge> getEdgesList() {
        return java.util.Collections.unmodifiableList(edges_);
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public int getEdgesCount() {
        return edges_.size();
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public com.technoworks.CarolineMonitor.Protocol.Edge getEdges(int index) {
        return edges_.get(index);
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder setEdges(
          int index, com.technoworks.CarolineMonitor.Protocol.Edge value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEdgesIsMutable();
        edges_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder setEdges(
          int index, com.technoworks.CarolineMonitor.Protocol.Edge.Builder builderForValue) {
        ensureEdgesIsMutable();
        edges_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder addEdges(com.technoworks.CarolineMonitor.Protocol.Edge value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEdgesIsMutable();
        edges_.add(value);

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder addEdges(
          int index, com.technoworks.CarolineMonitor.Protocol.Edge value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEdgesIsMutable();
        edges_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder addEdges(
          com.technoworks.CarolineMonitor.Protocol.Edge.Builder builderForValue) {
        ensureEdgesIsMutable();
        edges_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder addEdges(
          int index, com.technoworks.CarolineMonitor.Protocol.Edge.Builder builderForValue) {
        ensureEdgesIsMutable();
        edges_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder addAllEdges(
          java.lang.Iterable<? extends com.technoworks.CarolineMonitor.Protocol.Edge> values) {
        ensureEdgesIsMutable();
        super.addAll(values, edges_);

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder clearEdges() {
        edges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .Edge edges = 2;</code>
       */
      public Builder removeEdges(int index) {
        ensureEdgesIsMutable();
        edges_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:Model)
    }

    static {
      defaultInstance = new Model(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Model)
  }

  public interface LogOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string line = 1;
    /**
     * <code>required string line = 1;</code>
     */
    boolean hasLine();
    /**
     * <code>required string line = 1;</code>
     */
    java.lang.String getLine();
    /**
     * <code>required string line = 1;</code>
     */
    com.google.protobuf.ByteString
        getLineBytes();
  }
  /**
   * Protobuf type {@code Log}
   */
  public static final class Log extends
      com.google.protobuf.GeneratedMessageLite
      implements LogOrBuilder {
    // Use Log.newBuilder() to construct.
    private Log(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Log(boolean noInit) {}

    private static final Log defaultInstance;
    public static Log getDefaultInstance() {
      return defaultInstance;
    }

    public Log getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Log(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              line_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Log> PARSER =
        new com.google.protobuf.AbstractParser<Log>() {
      public Log parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Log(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Log> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string line = 1;
    public static final int LINE_FIELD_NUMBER = 1;
    private java.lang.Object line_;
    /**
     * <code>required string line = 1;</code>
     */
    public boolean hasLine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string line = 1;</code>
     */
    public java.lang.String getLine() {
      java.lang.Object ref = line_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          line_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string line = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLineBytes() {
      java.lang.Object ref = line_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        line_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      line_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLine()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLineBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLineBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Log parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Log prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Log}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Log, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.LogOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Log.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        line_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Log getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Log.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Log build() {
        com.technoworks.CarolineMonitor.Protocol.Log result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Log buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Log result = new com.technoworks.CarolineMonitor.Protocol.Log(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.line_ = line_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Log other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Log.getDefaultInstance()) return this;
        if (other.hasLine()) {
          bitField0_ |= 0x00000001;
          line_ = other.line_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLine()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Log parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Log) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string line = 1;
      private java.lang.Object line_ = "";
      /**
       * <code>required string line = 1;</code>
       */
      public boolean hasLine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string line = 1;</code>
       */
      public java.lang.String getLine() {
        java.lang.Object ref = line_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          line_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string line = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLineBytes() {
        java.lang.Object ref = line_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          line_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string line = 1;</code>
       */
      public Builder setLine(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        line_ = value;
        
        return this;
      }
      /**
       * <code>required string line = 1;</code>
       */
      public Builder clearLine() {
        bitField0_ = (bitField0_ & ~0x00000001);
        line_ = getDefaultInstance().getLine();
        
        return this;
      }
      /**
       * <code>required string line = 1;</code>
       */
      public Builder setLineBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        line_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Log)
    }

    static {
      defaultInstance = new Log(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Log)
  }

  public interface ImageOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 width = 1;
    /**
     * <code>required int32 width = 1;</code>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 1;</code>
     */
    int getWidth();

    // required int32 height = 2;
    /**
     * <code>required int32 height = 2;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 2;</code>
     */
    int getHeight();

    // repeated int32 data = 3;
    /**
     * <code>repeated int32 data = 3;</code>
     */
    java.util.List<java.lang.Integer> getDataList();
    /**
     * <code>repeated int32 data = 3;</code>
     */
    int getDataCount();
    /**
     * <code>repeated int32 data = 3;</code>
     */
    int getData(int index);
  }
  /**
   * Protobuf type {@code Image}
   */
  public static final class Image extends
      com.google.protobuf.GeneratedMessageLite
      implements ImageOrBuilder {
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Image(boolean noInit) {}

    private static final Image defaultInstance;
    public static Image getDefaultInstance() {
      return defaultInstance;
    }

    public Image getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              width_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              height_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                data_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              data_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                data_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Image> PARSER =
        new com.google.protobuf.AbstractParser<Image>() {
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Image(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 width = 1;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <code>required int32 width = 1;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 width = 1;</code>
     */
    public int getWidth() {
      return width_;
    }

    // required int32 height = 2;
    public static final int HEIGHT_FIELD_NUMBER = 2;
    private int height_;
    /**
     * <code>required int32 height = 2;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 height = 2;</code>
     */
    public int getHeight() {
      return height_;
    }

    // repeated int32 data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> data_;
    /**
     * <code>repeated int32 data = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated int32 data = 3;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated int32 data = 3;</code>
     */
    public int getData(int index) {
      return data_.get(index);
    }

    private void initFields() {
      width_ = 0;
      height_ = 0;
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, height_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeInt32(3, data_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, height_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(data_.get(i));
        }
        size += dataSize;
        size += 1 * getDataList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Image prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Image, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.ImageOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Image getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Image build() {
        com.technoworks.CarolineMonitor.Protocol.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Image buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Image result = new com.technoworks.CarolineMonitor.Protocol.Image(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Image other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Image.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Image) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 width = 1;
      private int width_ ;
      /**
       * <code>required int32 width = 1;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        
        return this;
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        
        return this;
      }

      // required int32 height = 2;
      private int height_ ;
      /**
       * <code>required int32 height = 2;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        
        return this;
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        
        return this;
      }

      // repeated int32 data = 3;
      private java.util.List<java.lang.Integer> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = new java.util.ArrayList<java.lang.Integer>(data_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public int getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public Builder setData(
          int index, int value) {
        ensureDataIsMutable();
        data_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public Builder addData(int value) {
        ensureDataIsMutable();
        data_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDataIsMutable();
        super.addAll(values, data_);
        
        return this;
      }
      /**
       * <code>repeated int32 data = 3;</code>
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Image)
    }

    static {
      defaultInstance = new Image(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Image)
  }

  public interface Point2OrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 x = 1;
    /**
     * <code>required int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 x = 1;</code>
     */
    int getX();

    // required int32 y = 2;
    /**
     * <code>required int32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required int32 y = 2;</code>
     */
    int getY();
  }
  /**
   * Protobuf type {@code Point2}
   */
  public static final class Point2 extends
      com.google.protobuf.GeneratedMessageLite
      implements Point2OrBuilder {
    // Use Point2.newBuilder() to construct.
    private Point2(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Point2(boolean noInit) {}

    private static final Point2 defaultInstance;
    public static Point2 getDefaultInstance() {
      return defaultInstance;
    }

    public Point2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Point2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Point2> PARSER =
        new com.google.protobuf.AbstractParser<Point2>() {
      public Point2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Point2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Point2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>required int32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    private void initFields() {
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Point2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Point2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Point2, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.Point2OrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Point2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Point2 getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Point2 build() {
        com.technoworks.CarolineMonitor.Protocol.Point2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Point2 buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Point2 result = new com.technoworks.CarolineMonitor.Protocol.Point2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Point2 other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Point2.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Point2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Point2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 x = 1;
      private int x_ ;
      /**
       * <code>required int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        
        return this;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        
        return this;
      }

      // required int32 y = 2;
      private int y_ ;
      /**
       * <code>required int32 y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        
        return this;
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Point2)
    }

    static {
      defaultInstance = new Point2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Point2)
  }

  public interface Point3OrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required double x = 1;
    /**
     * <code>required double x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required double x = 1;</code>
     */
    double getX();

    // required double y = 2;
    /**
     * <code>required double y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required double y = 2;</code>
     */
    double getY();

    // required double z = 3;
    /**
     * <code>required double z = 3;</code>
     */
    boolean hasZ();
    /**
     * <code>required double z = 3;</code>
     */
    double getZ();
  }
  /**
   * Protobuf type {@code Point3}
   */
  public static final class Point3 extends
      com.google.protobuf.GeneratedMessageLite
      implements Point3OrBuilder {
    // Use Point3.newBuilder() to construct.
    private Point3(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Point3(boolean noInit) {}

    private static final Point3 defaultInstance;
    public static Point3 getDefaultInstance() {
      return defaultInstance;
    }

    public Point3 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Point3(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              x_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              y_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              z_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Point3> PARSER =
        new com.google.protobuf.AbstractParser<Point3>() {
      public Point3 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Point3(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Point3> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <code>required double x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double x = 1;</code>
     */
    public double getX() {
      return x_;
    }

    // required double y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <code>required double y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double y = 2;</code>
     */
    public double getY() {
      return y_;
    }

    // required double z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private double z_;
    /**
     * <code>required double z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double z = 3;</code>
     */
    public double getZ() {
      return z_;
    }

    private void initFields() {
      x_ = 0D;
      y_ = 0D;
      z_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, z_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, z_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Point3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Point3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Point3}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Point3, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.Point3OrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Point3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Point3 getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Point3.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Point3 build() {
        com.technoworks.CarolineMonitor.Protocol.Point3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Point3 buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Point3 result = new com.technoworks.CarolineMonitor.Protocol.Point3(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Point3 other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Point3.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Point3 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Point3) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double x = 1;
      private double x_ ;
      /**
       * <code>required double x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double x = 1;</code>
       */
      public double getX() {
        return x_;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder setX(double value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        
        return this;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        
        return this;
      }

      // required double y = 2;
      private double y_ ;
      /**
       * <code>required double y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double y = 2;</code>
       */
      public double getY() {
        return y_;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder setY(double value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        
        return this;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        
        return this;
      }

      // required double z = 3;
      private double z_ ;
      /**
       * <code>required double z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double z = 3;</code>
       */
      public double getZ() {
        return z_;
      }
      /**
       * <code>required double z = 3;</code>
       */
      public Builder setZ(double value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        
        return this;
      }
      /**
       * <code>required double z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0D;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Point3)
    }

    static {
      defaultInstance = new Point3(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Point3)
  }

  public interface EdgeOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 begin = 1;
    /**
     * <code>required uint32 begin = 1;</code>
     */
    boolean hasBegin();
    /**
     * <code>required uint32 begin = 1;</code>
     */
    int getBegin();

    // required uint32 end = 2;
    /**
     * <code>required uint32 end = 2;</code>
     */
    boolean hasEnd();
    /**
     * <code>required uint32 end = 2;</code>
     */
    int getEnd();
  }
  /**
   * Protobuf type {@code Edge}
   */
  public static final class Edge extends
      com.google.protobuf.GeneratedMessageLite
      implements EdgeOrBuilder {
    // Use Edge.newBuilder() to construct.
    private Edge(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Edge(boolean noInit) {}

    private static final Edge defaultInstance;
    public static Edge getDefaultInstance() {
      return defaultInstance;
    }

    public Edge getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Edge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              begin_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              end_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Edge> PARSER =
        new com.google.protobuf.AbstractParser<Edge>() {
      public Edge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Edge(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Edge> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 begin = 1;
    public static final int BEGIN_FIELD_NUMBER = 1;
    private int begin_;
    /**
     * <code>required uint32 begin = 1;</code>
     */
    public boolean hasBegin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 begin = 1;</code>
     */
    public int getBegin() {
      return begin_;
    }

    // required uint32 end = 2;
    public static final int END_FIELD_NUMBER = 2;
    private int end_;
    /**
     * <code>required uint32 end = 2;</code>
     */
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 end = 2;</code>
     */
    public int getEnd() {
      return end_;
    }

    private void initFields() {
      begin_ = 0;
      end_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, end_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, end_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.CarolineMonitor.Protocol.Edge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.CarolineMonitor.Protocol.Edge prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Edge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.CarolineMonitor.Protocol.Edge, Builder>
        implements com.technoworks.CarolineMonitor.Protocol.EdgeOrBuilder {
      // Construct using com.technoworks.CarolineMonitor.Protocol.Edge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        begin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        end_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.CarolineMonitor.Protocol.Edge getDefaultInstanceForType() {
        return com.technoworks.CarolineMonitor.Protocol.Edge.getDefaultInstance();
      }

      public com.technoworks.CarolineMonitor.Protocol.Edge build() {
        com.technoworks.CarolineMonitor.Protocol.Edge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.CarolineMonitor.Protocol.Edge buildPartial() {
        com.technoworks.CarolineMonitor.Protocol.Edge result = new com.technoworks.CarolineMonitor.Protocol.Edge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.begin_ = begin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.end_ = end_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.CarolineMonitor.Protocol.Edge other) {
        if (other == com.technoworks.CarolineMonitor.Protocol.Edge.getDefaultInstance()) return this;
        if (other.hasBegin()) {
          setBegin(other.getBegin());
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBegin()) {
          
          return false;
        }
        if (!hasEnd()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.CarolineMonitor.Protocol.Edge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.CarolineMonitor.Protocol.Edge) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 begin = 1;
      private int begin_ ;
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public int getBegin() {
        return begin_;
      }
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public Builder setBegin(int value) {
        bitField0_ |= 0x00000001;
        begin_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public Builder clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        begin_ = 0;
        
        return this;
      }

      // required uint32 end = 2;
      private int end_ ;
      /**
       * <code>required uint32 end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <code>required uint32 end = 2;</code>
       */
      public Builder setEnd(int value) {
        bitField0_ |= 0x00000002;
        end_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 end = 2;</code>
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Edge)
    }

    static {
      defaultInstance = new Edge(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Edge)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
